class SFcolorCode
{
methods:
 
static int get_FL_BLACK  ();
static int get_FL_RED    ();
static int get_FL_GREEN  ();
static int get_FL_YELLOW ();
static int get_FL_BLUE   ();
static int get_FL_MAGENTA();
static int get_FL_CYAN   ();
static int get_FL_DARK_RED();
static int get_FL_DARK_GREEN   ();
static int get_FL_DARK_YELLOW  ();
static int get_FL_DARK_BLUE    ();
static int get_FL_DARK_MAGENTA ();
static int get_FL_DARK_CYAN    ();
static int get_FL_WHITE        ();
};

class SFcallbackTarget
{
methods:
   void callback(int source);
};


class SFbutton
{
  inline_cpp[[
     Fl_Button* fb;
  ]]
  char label[200];
methods:
   SFbutton();
   void create(int x, int y,int width, int height, &char labeli[]);

   virtual void callback();
};



class SFinput
{
   inline_cpp[[ Fl_Input* fi; ]]
methods:
   SFinput();
   void create(int x, int y,int width, int height);
   void get(&String_16 value);
};

/*a text label to be displayed at position x,y */
class SFlabel
{
   *char strBuf[];
   int x;
   int y; 
methods:
};


/* eine Fl_Box, in der man zeichnen kann */
class SFbox
{
   inline_cpp[[ 
     class MyBox: public Fl_Box
     {
          SFbox* sappeurBox;
     public:
          MyBox(SFbox* sappeurBoxi,int x,int y,int w,int h):Fl_Box(x,y,w,h)
          { 
             sappeurBox = sappeurBoxi;
          }

          void draw() override
          {
             Fl_Box::draw();
             fl_color(FL_RED);
             char sp;
             sappeurBox->draw(&sp);
          }
     };

     MyBox* mb; 
   ]]
   *int punkteX[];
   *int punkteY[];
   *int farbe[];
   int punkteGueltig;
   *char label[];   

   *SFlabel* labels[];//Labels, die irgendwoe auf der Flaeche der SFBox 
                     //dargestellt werden
   int labelsGueltig;
methods:
   SFbox();
   void create(int x, int y,int width, int height);

   void addPoint(int x,int y,int farbei);//melde einen Punkt zum Zeichnen an

   int hoehe();

   void loesche();//loesche die Box

   virtual void draw();//wird vom Framework gerufen

   void drawString(int x, int y,&String_16 str);

   void redraw(); //wird von der Applikation gerufen, um Box neu zu zeichnen
   
};


class SFfont
{
methods:

int getFontID_FL_HELVETICA_();
int getFontID_FL_HELVETICA_BOLD_();
int getFontID_FL_HELVETICA_ITALIC_();
int getFontID_FL_HELVETICA_BOLD_ITALIC_();
int getFontID_FL_COURIER_();
int getFontID_FL_COURIER_BOLD_();
int getFontID_FL_COURIER_ITALIC_();
int getFontID_FL_COURIER_BOLD_ITALIC_();
int getFontID_FL_TIMES_();
int getFontID_FL_TIMES_BOLD_();
int getFontID_FL_TIMES_ITALIC_();
int getFontID_FL_TIMES_BOLD_ITALIC_();
int getFontID_FL_SYMBOL_();
int getFontID_FL_SCREEN_();
int getFontID_FL_SCREEN_BOLD_();
int getFontID_FL_ZAPF_DINGBATS_();

int getFontID_FL_FREE_FONT_();
int getFontID_FL_BOLD_();
int getFontID_FL_ITALIC_();
int getFontID_FL_BOLD_ITALIC_();

  void setFont(int font_id, int sizei);

};



