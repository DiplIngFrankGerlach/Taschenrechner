MeinKnopf::MeinKnopf(TRKontext* trki)
{
   trk = trki;
}


void MeinKnopf::callback()
{
   var PrintfClass pfc;   

   var String_16* ausdruck = new String_16;
   trk.ausdruckInput.get(*ausdruck);
   pfc.fstr("Callback Sappeur $").sa(ausdruck).pr();

   var double varStart;
   var double varEnd;

   var String_16 zk;
   trk.varStartInput.get(zk); varStart = zk.asDouble();
   trk.varEndInput.get(zk);   varEnd   = zk.asDouble();

   var String_16 varName;
   trk.varInput.get(varName);

   var double breite = varEnd - varStart;

   var Math m;
   var MathLimits ml;
   var int breitePixel = 700;
   var *double yWerte[] = new double[breitePixel];
   var double yMin = ml.dblMax();
   var double yMax = ml.dblLowest();

   
   
   for(var int i=0; i < breitePixel;i++)
   {
      var double x = ((cast(double,i) / cast(double,breitePixel - 1)) * breite)  + varStart;
      var AusrechnerFK ar(ausdruck); 
      ar.setVariableValue(varName,x);
      
      var double y = ar.Addition();
      yWerte[i] = y;
      if(y > yMax){yMax = y;}
      if(y < yMin){yMin = y;}
      pfc.fstr("x:$ y:$").sa(x).sa(y).pr();
   }
   pfc.fstr("min:$ max:$").sa(yMin).sa(yMax).pr();
   var double yInterval = yMax - yMin;
   var double displayHoehe = trk.ausgabeBox.hoehe(); //hoehe in Pixel
   var SFcolorCode cc; 
   for(var int i=0; i < breitePixel;i++)
   {
      var double yPixel = ((yWerte[i] - yMin)/yInterval) * (displayHoehe - 1);
      var int yAusgabe = cast(int,(displayHoehe-yPixel));
      trk.ausgabeBox.addPoint(i,yAusgabe,cc.get_FL_BLUE());   
   }
   //x-Achsen ausgeben
   var double yKonstant = yMin;
   var String_16 ll;
   for(var int j=0; j < 10; j++)
   {
     var double yPixel = ((yKonstant - yMin)/(yMax-yMin)) * (displayHoehe - 1);
     var int yAusgabe = cast(int,(displayHoehe-yPixel));
     for(var int i=0; i < breitePixel;i++)
     {
        trk.ausgabeBox.addPoint(i,yAusgabe,cc.get_FL_DARK_CYAN());   
     } 
     var int jm2 = j % 2; 
     if(jm2 == 1)
     {
        ll.clear();
        StringUtil::appendDouble(yKonstant,ll,6);
        trk.ausgabeBox.drawString(5,yAusgabe + 15,ll);
     }
     yKonstant = yKonstant + (yInterval / 10.0);
   }
   //y Achsen ausgeben
   var double xKonstant = varStart;
   for(var int j=0; j < 10; j++)
   {
      //pfc.fstr("xk:$").sa(xKonstant).pr();
      var double xPixel = (xKonstant - varStart)/breite * breitePixel;
       
      var int x = cast(int,xPixel);
      var int jm2 = j % 2; 
      if(jm2 == 1)
      {
        ll.clear();
        StringUtil::appendDouble(xKonstant,ll,6);
        trk.ausgabeBox.drawString(x+5,15,ll);
      }
      for(var int y=0; y < displayHoehe; y++)
      {
         trk.ausgabeBox.addPoint(x,y,cc.get_FL_BLACK());   
      }
      xKonstant = xKonstant + ((varEnd - varStart) / 10.0);
   }
   var String_16 s;

   
   trk.ausgabeBox.redraw();
}


LoeschKnopf::LoeschKnopf(SFbox* sfbi)
{
   sfb = sfbi;
}


void LoeschKnopf::callback()
{
   sfb.loesche();
   sfb.redraw();
}

int Main::main()
{ 

   var CommandlineArgs cla;
   var PrintfClass pfc;

   var SprFLTKwindow swin;
   swin.begin(); 
   var String_16 label("Franks Taschenrechner  Ausgabe 1.4");
   swin.SetLabel(label);

   var SFinput* sfi = new SFinput;
   sfi.create(10,50,200,30);

   //Ausgabefeld fuer den x-y Graphen
   var SFbox* sfb = new SFbox;
   sfb.create(10,100,700,700);
   var String_16 l2;
   l2.assign("Katze");

   var SFinput* sfiVar = new SFinput;
   sfiVar.create(220,50,50,30);

   var SFinput* sfiVarValStart = new SFinput;
   sfiVarValStart.create(280,50,50,30);

   var SFinput* sfiVarValEnd = new SFinput;
   sfiVarValEnd.create(340,50,50,30);

   var TRKontext* trk = new TRKontext;
   trk.ausgabeBox = sfb;
   trk.ausdruckInput = sfi;
   trk.varInput = sfiVar;
   trk.varStartInput = sfiVarValStart;
   trk.varEndInput = sfiVarValEnd;

   var MeinKnopf knopf(trk);
   knopf.create(10,10,200,30,"zeichne");

   var LoeschKnopf lknopf(sfb);
   lknopf.create(210,10,100,30,"loesche");

   swin.end();
   swin.show();
   swin.run();
   
   return 1;
   
}
